{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "comp-590",
  "type": "registry:component",
  "registryDependencies": [
    "https://originui.com/r/avatar.json",
    "https://originui.com/r/button.json",
    "https://originui.com/r/dropdown-menu.json",
    "https://originui.com/r/navigation-menu.json",
    "https://originui.com/r/popover.json"
  ],
  "files": [
    {
      "path": "registry/default/components/comp-590.tsx",
      "content": "import {\n  CompassIcon,\n  FeatherIcon,\n  HouseIcon,\n  PlusIcon,\n  SearchIcon,\n} from \"lucide-react\"\n\nimport NotificationMenu from \"@/registry/default/components/navbar-components/notification-menu\"\nimport TeamSwitcher from \"@/registry/default/components/navbar-components/team-switcher\"\nimport UserMenu from \"@/registry/default/components/navbar-components/user-menu\"\nimport { Button } from \"@/registry/default/ui/button\"\nimport {\n  NavigationMenu,\n  NavigationMenuItem,\n  NavigationMenuLink,\n  NavigationMenuList,\n} from \"@/registry/default/ui/navigation-menu\"\nimport {\n  Popover,\n  PopoverContent,\n  PopoverTrigger,\n} from \"@/registry/default/ui/popover\"\n\nconst teams = [\"Acme Inc.\", \"Origin UI\", \"Junon\"]\n\n// Navigation links array to be used in both desktop and mobile menus\nconst navigationLinks = [\n  { href: \"#\", label: \"Dashboard\", icon: HouseIcon },\n  { href: \"#\", label: \"Explore\", icon: CompassIcon },\n  { href: \"#\", label: \"Write\", icon: FeatherIcon },\n  { href: \"#\", label: \"Search\", icon: SearchIcon },\n]\n\nexport default function Component() {\n  return (\n    <header className=\"border-b px-4 md:px-6\">\n      <div className=\"flex h-16 items-center justify-between gap-4\">\n        {/* Left side */}\n        <div className=\"flex flex-1 items-center gap-2\">\n          {/* Mobile menu trigger */}\n          <Popover>\n            <PopoverTrigger asChild>\n              <Button\n                className=\"group size-8 md:hidden\"\n                variant=\"ghost\"\n                size=\"icon\"\n              >\n                <svg\n                  className=\"pointer-events-none\"\n                  width={16}\n                  height={16}\n                  viewBox=\"0 0 24 24\"\n                  fill=\"none\"\n                  stroke=\"currentColor\"\n                  strokeWidth=\"2\"\n                  strokeLinecap=\"round\"\n                  strokeLinejoin=\"round\"\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                >\n                  <path\n                    d=\"M4 12L20 12\"\n                    className=\"origin-center -translate-y-[7px] transition-all duration-300 ease-[cubic-bezier(.5,.85,.25,1.1)] group-aria-expanded:translate-x-0 group-aria-expanded:translate-y-0 group-aria-expanded:rotate-[315deg]\"\n                  />\n                  <path\n                    d=\"M4 12H20\"\n                    className=\"origin-center transition-all duration-300 ease-[cubic-bezier(.5,.85,.25,1.8)] group-aria-expanded:rotate-45\"\n                  />\n                  <path\n                    d=\"M4 12H20\"\n                    className=\"origin-center translate-y-[7px] transition-all duration-300 ease-[cubic-bezier(.5,.85,.25,1.1)] group-aria-expanded:translate-y-0 group-aria-expanded:rotate-[135deg]\"\n                  />\n                </svg>\n              </Button>\n            </PopoverTrigger>\n            <PopoverContent align=\"start\" className=\"w-48 p-1 md:hidden\">\n              <NavigationMenu className=\"max-w-none *:w-full\">\n                <NavigationMenuList className=\"flex-col items-start gap-0 md:gap-2\">\n                  {navigationLinks.map((link, index) => {\n                    const Icon = link.icon\n                    return (\n                      <NavigationMenuItem key={index} className=\"w-full\">\n                        <NavigationMenuLink\n                          href={link.href}\n                          className=\"flex-row items-center gap-2 py-1.5\"\n                        >\n                          <Icon\n                            size={16}\n                            className=\"text-muted-foreground\"\n                            aria-hidden=\"true\"\n                          />\n                          <span>{link.label}</span>\n                        </NavigationMenuLink>\n                      </NavigationMenuItem>\n                    )\n                  })}\n                </NavigationMenuList>\n              </NavigationMenu>\n            </PopoverContent>\n          </Popover>\n          <TeamSwitcher teams={teams} defaultTeam={teams[0]} />\n        </div>\n        {/* Middle area */}\n        <NavigationMenu className=\"max-md:hidden\">\n          <NavigationMenuList className=\"gap-2\">\n            {navigationLinks.map((link, index) => {\n              const Icon = link.icon\n              return (\n                <NavigationMenuItem key={index}>\n                  <NavigationMenuLink\n                    href={link.href}\n                    className=\"flex size-8 items-center justify-center p-1.5\"\n                    title={link.label}\n                  >\n                    <Icon aria-hidden=\"true\" />\n                    <span className=\"sr-only\">{link.label}</span>\n                  </NavigationMenuLink>\n                </NavigationMenuItem>\n              )\n            })}\n          </NavigationMenuList>\n        </NavigationMenu>\n        {/* Right side */}\n        <div className=\"flex flex-1 items-center justify-end gap-4\">\n          <Button size=\"sm\" className=\"text-sm max-sm:aspect-square max-sm:p-0\">\n            <PlusIcon\n              className=\"opacity-60 sm:-ms-1\"\n              size={16}\n              aria-hidden=\"true\"\n            />\n            <span className=\"max-sm:sr-only\">Post</span>\n          </Button>\n          <NotificationMenu />\n          <UserMenu />\n        </div>\n      </div>\n    </header>\n  )\n}\n",
      "type": "registry:component"
    },
    {
      "path": "registry/default/components/navbar-components/notification-menu.tsx",
      "content": "\"use client\"\n\nimport { useState } from \"react\"\nimport { BellIcon } from \"lucide-react\"\n\nimport { Button } from \"@/registry/default/ui/button\"\nimport {\n  Popover,\n  PopoverContent,\n  PopoverTrigger,\n} from \"@/registry/default/ui/popover\"\n\nconst initialNotifications = [\n  {\n    id: 1,\n    user: \"Chris Tompson\",\n    action: \"requested review on\",\n    target: \"PR #42: Feature implementation\",\n    timestamp: \"15 minutes ago\",\n    unread: true,\n  },\n  {\n    id: 2,\n    user: \"Emma Davis\",\n    action: \"shared\",\n    target: \"New component library\",\n    timestamp: \"45 minutes ago\",\n    unread: true,\n  },\n  {\n    id: 3,\n    user: \"James Wilson\",\n    action: \"assigned you to\",\n    target: \"API integration task\",\n    timestamp: \"4 hours ago\",\n    unread: false,\n  },\n  {\n    id: 4,\n    user: \"Alex Morgan\",\n    action: \"replied to your comment in\",\n    target: \"Authentication flow\",\n    timestamp: \"12 hours ago\",\n    unread: false,\n  },\n  {\n    id: 5,\n    user: \"Sarah Chen\",\n    action: \"commented on\",\n    target: \"Dashboard redesign\",\n    timestamp: \"2 days ago\",\n    unread: false,\n  },\n  {\n    id: 6,\n    user: \"Miky Derya\",\n    action: \"mentioned you in\",\n    target: \"Origin UI open graph image\",\n    timestamp: \"2 weeks ago\",\n    unread: false,\n  },\n]\n\nfunction Dot({ className }: { className?: string }) {\n  return (\n    <svg\n      width=\"6\"\n      height=\"6\"\n      fill=\"currentColor\"\n      viewBox=\"0 0 6 6\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      className={className}\n      aria-hidden=\"true\"\n    >\n      <circle cx=\"3\" cy=\"3\" r=\"3\" />\n    </svg>\n  )\n}\n\nexport default function NotificationMenu() {\n  const [notifications, setNotifications] = useState(initialNotifications)\n  const unreadCount = notifications.filter((n) => n.unread).length\n\n  const handleMarkAllAsRead = () => {\n    setNotifications(\n      notifications.map((notification) => ({\n        ...notification,\n        unread: false,\n      }))\n    )\n  }\n\n  const handleNotificationClick = (id: number) => {\n    setNotifications(\n      notifications.map((notification) =>\n        notification.id === id\n          ? { ...notification, unread: false }\n          : notification\n      )\n    )\n  }\n\n  return (\n    <Popover>\n      <PopoverTrigger asChild>\n        <Button\n          size=\"icon\"\n          variant=\"ghost\"\n          className=\"text-muted-foreground relative size-8 rounded-full shadow-none\"\n          aria-label=\"Open notifications\"\n        >\n          <BellIcon size={16} aria-hidden=\"true\" />\n          {unreadCount > 0 && (\n            <div\n              aria-hidden=\"true\"\n              className=\"bg-primary absolute top-0.5 right-0.5 size-1 rounded-full\"\n            />\n          )}\n        </Button>\n      </PopoverTrigger>\n      <PopoverContent className=\"w-80 p-1\">\n        <div className=\"flex items-baseline justify-between gap-4 px-3 py-2\">\n          <div className=\"text-sm font-semibold\">Notifications</div>\n          {unreadCount > 0 && (\n            <button\n              className=\"text-xs font-medium hover:underline\"\n              onClick={handleMarkAllAsRead}\n            >\n              Mark all as read\n            </button>\n          )}\n        </div>\n        <div\n          role=\"separator\"\n          aria-orientation=\"horizontal\"\n          className=\"bg-border -mx-1 my-1 h-px\"\n        ></div>\n        {notifications.map((notification) => (\n          <div\n            key={notification.id}\n            className=\"hover:bg-accent rounded-md px-3 py-2 text-sm transition-colors\"\n          >\n            <div className=\"relative flex items-start pe-3\">\n              <div className=\"flex-1 space-y-1\">\n                <button\n                  className=\"text-foreground/80 text-left after:absolute after:inset-0\"\n                  onClick={() => handleNotificationClick(notification.id)}\n                >\n                  <span className=\"text-foreground font-medium hover:underline\">\n                    {notification.user}\n                  </span>{\" \"}\n                  {notification.action}{\" \"}\n                  <span className=\"text-foreground font-medium hover:underline\">\n                    {notification.target}\n                  </span>\n                  .\n                </button>\n                <div className=\"text-muted-foreground text-xs\">\n                  {notification.timestamp}\n                </div>\n              </div>\n              {notification.unread && (\n                <div className=\"absolute end-0 self-center\">\n                  <span className=\"sr-only\">Unread</span>\n                  <Dot />\n                </div>\n              )}\n            </div>\n          </div>\n        ))}\n      </PopoverContent>\n    </Popover>\n  )\n}\n",
      "type": "registry:component"
    },
    {
      "path": "registry/default/components/navbar-components/team-switcher.tsx",
      "content": "\"use client\"\n\nimport * as React from \"react\"\nimport { ChevronsUpDown } from \"lucide-react\"\n\nimport { Button } from \"@/registry/default/ui/button\"\nimport {\n  DropdownMenu,\n  DropdownMenuContent,\n  DropdownMenuItem,\n  DropdownMenuTrigger,\n} from \"@/registry/default/ui/dropdown-menu\"\n\nexport default function TeamSwitcher({\n  teams,\n  defaultTeam,\n}: {\n  teams: string[]\n  defaultTeam: string\n}) {\n  const [selectedProject, setSelectedProject] = React.useState(defaultTeam)\n\n  return (\n    <DropdownMenu>\n      <DropdownMenuTrigger asChild>\n        <Button variant=\"ghost\" className=\"p-0 hover:bg-transparent\">\n          <span className=\"bg-primary text-primary-foreground flex size-8 items-center justify-center rounded-full\">\n            {selectedProject.charAt(0).toUpperCase()}\n          </span>\n          <div className=\"flex flex-col gap-0.5 leading-none\">\n            <span className=\"\">{selectedProject}</span>\n          </div>\n          <ChevronsUpDown size={14} className=\"text-muted-foreground/80\" />\n        </Button>\n      </DropdownMenuTrigger>\n      <DropdownMenuContent align=\"start\">\n        {teams.map((project) => (\n          <DropdownMenuItem\n            key={project}\n            onSelect={() => setSelectedProject(project)}\n          >\n            {project}\n          </DropdownMenuItem>\n        ))}\n      </DropdownMenuContent>\n    </DropdownMenu>\n  )\n}\n",
      "type": "registry:component"
    },
    {
      "path": "registry/default/components/navbar-components/user-menu.tsx",
      "content": "import {\n  BoltIcon,\n  BookOpenIcon,\n  Layers2Icon,\n  LogOutIcon,\n  PinIcon,\n  UserPenIcon,\n} from \"lucide-react\"\n\nimport {\n  Avatar,\n  AvatarFallback,\n  AvatarImage,\n} from \"@/registry/default/ui/avatar\"\nimport { Button } from \"@/registry/default/ui/button\"\nimport {\n  DropdownMenu,\n  DropdownMenuContent,\n  DropdownMenuGroup,\n  DropdownMenuItem,\n  DropdownMenuLabel,\n  DropdownMenuSeparator,\n  DropdownMenuTrigger,\n} from \"@/registry/default/ui/dropdown-menu\"\n\nexport default function UserMenu() {\n  return (\n    <DropdownMenu>\n      <DropdownMenuTrigger asChild>\n        <Button variant=\"ghost\" className=\"h-auto p-0 hover:bg-transparent\">\n          <Avatar>\n            <AvatarImage src=\"./avatar.jpg\" alt=\"Profile image\" />\n            <AvatarFallback>KK</AvatarFallback>\n          </Avatar>\n        </Button>\n      </DropdownMenuTrigger>\n      <DropdownMenuContent className=\"max-w-64\" align=\"end\">\n        <DropdownMenuLabel className=\"flex min-w-0 flex-col\">\n          <span className=\"text-foreground truncate text-sm font-medium\">\n            Keith Kennedy\n          </span>\n          <span className=\"text-muted-foreground truncate text-xs font-normal\">\n            k.kennedy@originui.com\n          </span>\n        </DropdownMenuLabel>\n        <DropdownMenuSeparator />\n        <DropdownMenuGroup>\n          <DropdownMenuItem>\n            <BoltIcon size={16} className=\"opacity-60\" aria-hidden=\"true\" />\n            <span>Option 1</span>\n          </DropdownMenuItem>\n          <DropdownMenuItem>\n            <Layers2Icon size={16} className=\"opacity-60\" aria-hidden=\"true\" />\n            <span>Option 2</span>\n          </DropdownMenuItem>\n          <DropdownMenuItem>\n            <BookOpenIcon size={16} className=\"opacity-60\" aria-hidden=\"true\" />\n            <span>Option 3</span>\n          </DropdownMenuItem>\n        </DropdownMenuGroup>\n        <DropdownMenuSeparator />\n        <DropdownMenuGroup>\n          <DropdownMenuItem>\n            <PinIcon size={16} className=\"opacity-60\" aria-hidden=\"true\" />\n            <span>Option 4</span>\n          </DropdownMenuItem>\n          <DropdownMenuItem>\n            <UserPenIcon size={16} className=\"opacity-60\" aria-hidden=\"true\" />\n            <span>Option 5</span>\n          </DropdownMenuItem>\n        </DropdownMenuGroup>\n        <DropdownMenuSeparator />\n        <DropdownMenuItem>\n          <LogOutIcon size={16} className=\"opacity-60\" aria-hidden=\"true\" />\n          <span>Logout</span>\n        </DropdownMenuItem>\n      </DropdownMenuContent>\n    </DropdownMenu>\n  )\n}\n",
      "type": "registry:component"
    }
  ],
  "meta": {
    "tags": [
      "navbar, navigation"
    ],
    "colSpan": 3
  }
}