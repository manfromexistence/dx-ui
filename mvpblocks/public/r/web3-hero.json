{
  "name": "web3-hero",
  "type": "registry:block",
  "dependencies": [
    "react"
  ],
  "registryDependencies": [],
  "files": [
    {
      "type": "registry:block",
      "content": "\"use client\"\r\n\r\nimport React, { useEffect } from \"react\";\r\n\r\nexport default function Web3LandingPage() {\r\n  useEffect(() => {\r\n    const canvas = document.getElementById(\"particle-bg\") as HTMLCanvasElement | null;\r\n    if (!canvas) return;\r\n\r\n    const ctx = canvas.getContext(\"2d\")!;\r\n    const resize = () => {\r\n      canvas.width = window.innerWidth;\r\n      canvas.height = window.innerHeight;\r\n    };\r\n    resize();\r\n\r\n    type Particle = {\r\n      hue: number;\r\n      sat: number;\r\n      lum: number;\r\n      x: number;\r\n      y: number;\r\n      xLast: number;\r\n      yLast: number;\r\n      xSpeed: number;\r\n      ySpeed: number;\r\n      age: number;\r\n      ageSinceStuck: number;\r\n      attractor: { oldIndex: number; gridSpotIndex: number };\r\n      name: string;\r\n    };\r\n\r\n    type Spot = {\r\n      x: number;\r\n      y: number;\r\n      busyAge: number;\r\n      spotIndex: number;\r\n      isEdge: string | false;\r\n      field: number;\r\n    };\r\n\r\n    const App = {\r\n      width: canvas.width,\r\n      height: canvas.height,\r\n      ctx,\r\n      dataToImageRatio: 1,\r\n      particles: [] as Particle[],\r\n      stepCount: 0,\r\n      lifespan: 1000,\r\n      popPerBirth: 1,\r\n      maxPop: 300,\r\n      birthFreq: 2,\r\n      gridSize: 8,\r\n      gridSteps: Math.floor(1000 / 8),\r\n      grid: [] as Spot[],\r\n      drawnInLastFrame: 0,\r\n      deathCount: 0,\r\n      xC: canvas.width / 2,\r\n      yC: canvas.height / 2,\r\n      gridMaxIndex: 0,\r\n      birth() {\r\n        const idx = Math.floor(Math.random() * this.gridMaxIndex);\r\n        const spot = this.grid[idx];\r\n        this.particles.push({\r\n          hue: 276,\r\n          sat: 95,\r\n          lum: 60 + Math.floor(25 * Math.random()),\r\n          x: spot.x,\r\n          y: spot.y,\r\n          xLast: spot.x,\r\n          yLast: spot.y,\r\n          xSpeed: 0,\r\n          ySpeed: 0,\r\n          age: 0,\r\n          ageSinceStuck: 0,\r\n          attractor: {\r\n            oldIndex: idx,\r\n            gridSpotIndex: idx,\r\n          },\r\n          name: `seed-${Math.ceil(Math.random() * 1e7)}`,\r\n        });\r\n      },\r\n      kill(name: string) {\r\n        this.particles = this.particles.filter((p: { name: string; }) => p.name !== name);\r\n      },\r\n      move() {\r\n        const k = 8,\r\n          visc = 0.4;\r\n        this.particles.forEach((p: { xLast: any; x: number; yLast: any; y: number; attractor: { gridSpotIndex: any; oldIndex: any; }; ageSinceStuck: number; name: any; xSpeed: number; ySpeed: number; age: number; }) => {\r\n          p.xLast = p.x;\r\n          p.yLast = p.y;\r\n\r\n          let idx = p.attractor.gridSpotIndex;\r\n          let spot = this.grid[idx];\r\n\r\n          if (Math.random() < 0.5 && !spot.isEdge) {\r\n            const neighbours = [\r\n              this.grid[idx - 1],\r\n              this.grid[idx + 1],\r\n              this.grid[idx - this.gridSteps],\r\n              this.grid[idx + this.gridSteps],\r\n            ];\r\n            const chaos = 30;\r\n            const best = neighbours.reduce((a, b) =>\r\n              a.field + chaos * Math.random() > b.field + chaos * Math.random() ? a : b\r\n            );\r\n            if (best.busyAge === 0 || best.busyAge > 15) {\r\n              p.ageSinceStuck = 0;\r\n              p.attractor.oldIndex = idx;\r\n              p.attractor.gridSpotIndex = best.spotIndex;\r\n              spot = best;\r\n              spot.busyAge = 1;\r\n            } else {\r\n              p.ageSinceStuck++;\r\n            }\r\n          } else {\r\n            p.ageSinceStuck++;\r\n          }\r\n          if (p.ageSinceStuck === 10) this.kill(p.name);\r\n\r\n          const dx = p.x - spot.x,\r\n            dy = p.y - spot.y,\r\n            xAcc = -k * dx,\r\n            yAcc = -k * dy;\r\n          p.xSpeed = (p.xSpeed + xAcc) * visc;\r\n          p.ySpeed = (p.ySpeed + yAcc) * visc;\r\n          p.x += 0.1 * p.xSpeed;\r\n          p.y += 0.1 * p.ySpeed;\r\n\r\n          if (++p.age > this.lifespan) {\r\n            this.kill(p.name);\r\n            this.deathCount++;\r\n          }\r\n        });\r\n      },\r\n      dataXYtoCanvasXY(x: number, y: number) {\r\n        const z = 1.6;\r\n        return {\r\n          x: this.xC + x * z * this.dataToImageRatio,\r\n          y: this.yC + y * z * this.dataToImageRatio,\r\n        };\r\n      },\r\n      draw() {\r\n        this.drawnInLastFrame = 0;\r\n        if (!this.particles.length) return;\r\n        const ctx = this.ctx;\r\n        ctx.fillStyle = \"rgba(10,5,25,0.08)\";\r\n        ctx.fillRect(0, 0, this.width, this.height);\r\n\r\n        this.particles.forEach((p: { hue: number; sat: any; lum: any; xLast: any; yLast: any; x: any; y: any; attractor: { gridSpotIndex: string | number; oldIndex: string | number; }; }) => {\r\n          const h = p.hue + this.stepCount / 30,\r\n            s = p.sat,\r\n            l = p.lum,\r\n            last = this.dataXYtoCanvasXY(p.xLast, p.yLast),\r\n            now = this.dataXYtoCanvasXY(p.x, p.y),\r\n            spot = this.grid[p.attractor.gridSpotIndex],\r\n            spotXY = this.dataXYtoCanvasXY(spot.x, spot.y),\r\n            old = this.grid[p.attractor.oldIndex],\r\n            oldXY = this.dataXYtoCanvasXY(old.x, old.y);\r\n\r\n          ctx.strokeStyle = `hsla(${h},${s}%,${l}%,1)`;\r\n          ctx.lineWidth = 1.5 * this.dataToImageRatio;\r\n          ctx.beginPath();\r\n          ctx.moveTo(last.x, last.y);\r\n          ctx.lineTo(now.x, now.y);\r\n          ctx.stroke();\r\n\r\n          ctx.beginPath();\r\n          ctx.moveTo(oldXY.x, oldXY.y);\r\n          ctx.lineTo(spotXY.x, spotXY.y);\r\n          ctx.arc(spotXY.x, spotXY.y, 1.5 * this.dataToImageRatio, 0, Math.PI * 2);\r\n          ctx.stroke();\r\n          this.drawnInLastFrame++;\r\n        });\r\n      },\r\n      evolve() {\r\n        this.stepCount++;\r\n        this.grid.forEach((s: { busyAge: number; }) => {\r\n          if (s.busyAge > 0) s.busyAge++;\r\n        });\r\n        if (this.stepCount % this.birthFreq === 0 && this.particles.length + this.popPerBirth < this.maxPop)\r\n          this.birth();\r\n        this.move();\r\n        this.draw();\r\n      },\r\n      initDraw() {\r\n        this.ctx.fillStyle = \"#050514\";\r\n        this.ctx.fillRect(0, 0, this.width, this.height);\r\n      },\r\n    } as any;\r\n\r\n    (() => {\r\n      let i = 0;\r\n      for (let xx = -500; xx < 500; xx += 8) {\r\n        for (let yy = -500; yy < 500; yy += 8) {\r\n          const r = Math.sqrt(xx * xx + yy * yy),\r\n            r0 = 100,\r\n            field = r < r0 ? (255 / r0) * r : 255 - Math.min(255, (r - r0) / 2);\r\n          App.grid.push({\r\n            x: xx,\r\n            y: yy,\r\n            busyAge: 0,\r\n            spotIndex: i,\r\n            isEdge:\r\n              xx === -500\r\n                ? \"left\"\r\n                : xx === -500 + 8 * (App.gridSteps - 1)\r\n                ? \"right\"\r\n                : yy === -500\r\n                ? \"top\"\r\n                : yy === -500 + 8 * (App.gridSteps - 1)\r\n                ? \"bottom\"\r\n                : false,\r\n            field,\r\n          });\r\n          i++;\r\n        }\r\n      }\r\n      App.gridMaxIndex = i;\r\n    })();\r\n\r\n    App.initDraw();\r\n\r\n    const loop = () => {\r\n      App.evolve();\r\n      requestAnimationFrame(loop);\r\n    };\r\n    loop();\r\n\r\n    setTimeout(() => {\r\n      document.querySelectorAll<HTMLElement>(\".animate-seq\").forEach((el, idx) => {\r\n        setTimeout(() => el.classList.add(\"visible\"), idx * 120);\r\n      });\r\n    }, 100);\r\n\r\n    const onResize = () => {\r\n      resize();\r\n      App.width = canvas.width;\r\n      App.height = canvas.height;\r\n      App.xC = App.width / 2;\r\n      App.yC = App.height / 2;\r\n    };\r\n    window.addEventListener(\"resize\", onResize);\r\n\r\n    return () => window.removeEventListener(\"resize\", onResize);\r\n  }, []);\r\n\r\n  return (\r\n    <div\r\n      className=\"bg-gradient-to-br from-slate-950 via-slate-900 to-slate-950 text-slate-200 antialiased selection:bg-fuchsia-400/30 selection:text-fuchsia-200 relative overflow-x-hidden\"\r\n      style={{ fontFamily: \"Inter, Roboto, sans-serif\" }}\r\n    >\r\n      <canvas\r\n        id=\"particle-bg\"\r\n        className=\"fixed inset-0 w-full h-full pointer-events-none\"\r\n        style={{ zIndex: -1 }}\r\n      />\r\n\r\n      <div className=\"pointer-events-none absolute -top-32 left-0 h-[350px] w-[350px] rounded-full blur-[100px] bg-fuchsia-500/15\" />\r\n      <div className=\"pointer-events-none absolute bottom-0 right-0 h-[380px] w-[320px] rounded-full blur-3xl bg-fuchsia-600/20\" />\r\n\r\n      <main className=\"container max-w-7xl mx-auto px-4 mt-14 lg:mt-20 mb-10\">\r\n        <div className=\"flex flex-col-reverse lg:flex-row items-center gap-10 lg:gap-16\">\r\n          <section className=\"w-full max-w-xl text-center lg:text-left flex flex-col items-center lg:items-start animate-seq animate-delay-300\">\r\n            <h1\r\n              className=\"sm:text-5xl md:text-6xl text-4xl text-white mb-5 font-space-mono font-medium tracking-tighter\"\r\n              style={{ fontFamily: \"Inter, Roboto, sans-serif\" }}\r\n            >\r\n              Unleash the Chain<br />Own the Future\r\n            </h1>\r\n            <p className=\"sm:text-xl max-w-2xl text-lg text-gray-300 mr-auto mb-6 ml-auto font-geist\">\r\n              Monitor your holdings in real time, swap at lightning speed and\r\n              stake with a single click. Your hub for everything Web&nbsp;3.\r\n            </p>\r\n            <div className=\"flex flex-col sm:flex-row gap-3 items-center justify-center w-full sm:w-auto mt-2 mb-1\">\r\n              <button className=\"button font-geist\" aria-label=\"Get Started\">\r\n                <svg\r\n                  xmlns=\"http://www.w3.org/2000/svg\"\r\n                  width=\"24\"\r\n                  height=\"24\"\r\n                  viewBox=\"0 0 24 24\"\r\n                  fill=\"none\"\r\n                  stroke=\"currentColor\"\r\n                  strokeWidth=\"2\"\r\n                  strokeLinecap=\"round\"\r\n                  strokeLinejoin=\"round\"\r\n                  className=\"lucide lucide-cube icon\"\r\n                >\r\n                  <path d=\"M21 16V8a2 2 0 0 0-1-1.73l-7-4a2 2 0 0 0-2 0l-7 4A2 2 0 0 0 3 8v8a2 2 0 0 0 1 1.73l7 4a2 2 0 0 0 2 0l7-4A2 2 0 0 0 21 16z\" />\r\n                  <polyline points=\"3.27 6.96 12 12.01 20.73 6.96\" />\r\n                  <line x1=\"12\" y1=\"22.08\" x2=\"12\" y2=\"12\" />\r\n                </svg>\r\n                Start Building\r\n              </button>\r\n              <button className=\"button-secondary font-geist\" aria-label=\"Learn More\">\r\n                <svg\r\n                  xmlns=\"http://www.w3.org/2000/svg\"\r\n                  width=\"24\"\r\n                  height=\"24\"\r\n                  viewBox=\"0 0 24 24\"\r\n                  fill=\"none\"\r\n                  stroke=\"#a855f7\"\r\n                  strokeWidth=\"2\"\r\n                  strokeLinecap=\"round\"\r\n                  strokeLinejoin=\"round\"\r\n                  className=\"lucide lucide-info icon\"\r\n                >\r\n                  <circle cx=\"12\" cy=\"12\" r=\"10\" />\r\n                  <path d=\"M12 16v-4\" />\r\n                  <path d=\"M12 8h.01\" />\r\n                </svg>\r\n                Learn More\r\n              </button>\r\n            </div>\r\n          </section>\r\n\r\n          <section className=\"w-full max-w-md mx-auto rounded-3xl overflow-hidden shadow-2xl ring-1 bg-gradient-to-br from-white/10 to-white/5 backdrop-blur-[18px] border relative animate-seq animate-delay-500 glass-card-gaming ring-fuchsia-400/30 border-fuchsia-500/40 via-violet-900/40\" style={{ fontFamily: \"Roboto, Inter, sans-serif\" }}>\r\n            <div\r\n              className=\"relative bg-gradient-to-b from-white/15 via-white/0 to-white/0 pt-6 pr-6 pb-6 pl-6 space-y-6 items-center justify-center\"\r\n              style={{ backdropFilter: \"blur(25px)\", borderBottom: \"1px solid rgba(255,255,255,0.09)\" }}\r\n            >\r\n              <div className=\"flex items-center justify-between mb-8\">\r\n                <div className=\"flex items-center gap-2\">\r\n                  <span className=\"w-9 h-9 flex items-center justify-center rounded-full bg-gradient-to-tr from-fuchsia-400 to-violet-400 shadow-inner ring-2 ring-white/10\">\r\n                    <svg\r\n                      xmlns=\"http://www.w3.org/2000/svg\"\r\n                      width=\"24\"\r\n                      height=\"24\"\r\n                      viewBox=\"0 0 24 24\"\r\n                      fill=\"none\"\r\n                      stroke=\"currentColor\"\r\n                      strokeWidth=\"2\"\r\n                      strokeLinecap=\"round\"\r\n                      strokeLinejoin=\"round\"\r\n                      className=\"lucide lucide-user text-white w-5 h-5\"\r\n                    >\r\n                      <path d=\"M19 21v-2a4 4 0 0 0-4-4H9a4 4 0 0 0-4 4v2\" />\r\n                      <circle cx=\"12\" cy=\"7\" r=\"4\" />\r\n                    </svg>\r\n                  </span>\r\n                  <span className=\"text-2xl text-slate-50 font-space-mono\">CryptoX</span>\r\n                </div>\r\n                <span className=\"inline-flex items-center gap-1 px-3 py-1 rounded-full text-xs uppercase border bg-fuchsia-400/30 text-fuchsia-200 border-fuchsia-400/50 font-geist\">\r\n                  <svg\r\n                    xmlns=\"http://www.w3.org/2000/svg\"\r\n                    width=\"24\"\r\n                    height=\"24\"\r\n                    viewBox=\"0 0 24 24\"\r\n                    fill=\"none\"\r\n                    stroke=\"currentColor\"\r\n                    strokeWidth=\"2\"\r\n                    strokeLinecap=\"round\"\r\n                    strokeLinejoin=\"round\"\r\n                    className=\"lucide lucide-star w-3.5 h-3.5\"\r\n                  >\r\n                    <path d=\"M11.525 2.295a.53.53 0 0 1 .95 0l2.31 4.679a2.123 2.123 0 0 0 1.595 1.16l5.166.756a.53.53 0 0 1 .294.904l-3.736 3.638a2.123 2.123 0 0 0-.611 1.878l.882 5.14a.53.53 0 0 1-.771.56l-4.618-2.428a2.122 2.122 0 0 0-1.973 0L6.396 21.01a.53.53 0 0 1-.77-.56l.881-5.139a2.122 2.122 0 0 0-.611-1.879L2.16 9.795a.53.53 0 0 1 .294-.906l5.165-.755a2.122 2.122 0 0 0 1.597-1.16z\" />\r\n                  </svg>\r\n                  Genesis\r\n                </span>\r\n              </div>\r\n\r\n              <div className=\"relative flex items-center justify-center mb-8 controller-animate-group\" style={{ zIndex: 2 }}>\r\n                <div\r\n                  className=\"absolute -inset-4 blur-[40px] pointer-events-none\"\r\n                  style={{\r\n                    zIndex: 1,\r\n                    background:\r\n                      \"radial-gradient(circle at 70% 60%, rgba(232,121,249,0.12) 0%, rgba(168,85,247,0.14) 60%, transparent 100%)\",\r\n                  }}\r\n                />\r\n                <img\r\n                  src=\"https://i.imgur.com/ckSgzLQ.png\"\r\n                  alt=\"Crypto wallet holographic card\"\r\n                  className=\"controller-img w-[260px] md:w-[340px] lg:w-[390px] h-auto object-contain drop-shadow-[0_8px_24px_rgba(232,121,249,0.18)] pointer-events-none select-none z-10 relative\"\r\n                  draggable={false}\r\n                  loading=\"lazy\"\r\n                />\r\n              </div>\r\n\r\n              <div className=\"grid grid-cols-3 gap-2 text-center mb-7\">\r\n                <div>\r\n                  <div className=\"text-2xl text-fuchsia-400 font-space-mono\">$26k</div>\r\n                  <div className=\"uppercase text-xs text-slate-50 font-geist\">Portfolio</div>\r\n                </div>\r\n                <div>\r\n                  <div className=\"text-2xl text-fuchsia-400 font-space-mono\">0.003</div>\r\n                  <div className=\"uppercase text-xs text-slate-50 font-geist\">Gas (ETH)</div>\r\n                </div>\r\n                <div>\r\n                  <div className=\"text-2xl text-fuchsia-400 font-space-mono\">14%</div>\r\n                  <div className=\"uppercase text-xs text-slate-50 font-geist\">APY</div>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"h-px bg-gradient-to-r to-white/10 mb-6 from-fuchsia-400/10 via-fuchsia-300/20\" />\r\n\r\n              <div className=\"grid grid-cols-2 gap-x-4 gap-y-5 mb-7\">\r\n                {[\r\n                  { label: \"Layer‑2 Speed\", icon: \"zap\" },\r\n                  { label: \"Immutable Ledger\", icon: \"vibrate\" },\r\n                  { label: \"On‑chain Voice\", icon: \"mic\" },\r\n                  { label: \"Fast Withdrawals\", icon: \"usb\" },\r\n                ].map(({ label, icon }, idx) => (\r\n                  <div key={idx} className=\"flex items-center gap-3\">\r\n                    <span className=\"w-9 h-9 flex items-center justify-center rounded-lg border shadow-inner bg-violet-800/30 border-fuchsia-400/30 text-fuchsia-100\">\r\n                      <svg\r\n                        xmlns=\"http://www.w3.org/2000/svg\"\r\n                        width=\"24\"\r\n                        height=\"24\"\r\n                        viewBox=\"0 0 24 24\"\r\n                        fill=\"none\"\r\n                        stroke=\"currentColor\"\r\n                        strokeWidth=\"2\"\r\n                        strokeLinecap=\"round\"\r\n                        strokeLinejoin=\"round\"\r\n                        className={`lucide lucide-${icon} w-5 h-5`}\r\n                      >\r\n                        {icon === \"zap\" && <path d=\"M4 14a1 1 0 0 1-.78-1.63l9.9-10.2a.5.5 0 0 1 .86.46l-1.92 6.02A1 1 0 0 0 13 10h7a1 1 0 0 1 .78 1.63l-9.9 10.2a.5.5 0 0 1-.86-.46l1.92-6.02A1 1 0 0 0 11 14z\" />}\r\n                        {icon === \"vibrate\" && (\r\n                          <>\r\n                            <path d=\"m2 8 2 2-2 2 2 2-2 2\" />\r\n                            <path d=\"m22 8-2 2 2 2-2 2 2 2\" />\r\n                            <rect width=\"8\" height=\"14\" x=\"8\" y=\"5\" rx=\"1\" />\r\n                          </>\r\n                        )}\r\n                        {icon === \"mic\" && (\r\n                          <>\r\n                            <path d=\"M12 19v3\" />\r\n                            <path d=\"M19 10v2a7 7 0 0 1-14 0v-2\" />\r\n                            <rect x=\"9\" y=\"2\" width=\"6\" height=\"13\" rx=\"3\" />\r\n                          </>\r\n                        )}\r\n                        {icon === \"usb\" && (\r\n                          <>\r\n                            <circle cx=\"10\" cy=\"7\" r=\"1\" />\r\n                            <circle cx=\"4\" cy=\"20\" r=\"1\" />\r\n                            <path d=\"M4.7 19.3 19 5\" />\r\n                            <path d=\"m21 3-3 1 2 2Z\" />\r\n                            <path d=\"M9.26 7.68 5 12l2 5\" />\r\n                            <path d=\"m10 14 5 2 3.5-3.5\" />\r\n                            <path d=\"m18 12 1-1 1 1-1 1Z\" />\r\n                          </>\r\n                        )}\r\n                      </svg>\r\n                    </span>\r\n                    <span className=\"text-sm text-white/90 font-geist\">{label}</span>\r\n                  </div>\r\n                ))}\r\n              </div>\r\n\r\n              <div className=\"h-px bg-gradient-to-r to-white/10 mb-6 via-fuchsia-300/20 from-fuchsia-400/10\" />\r\n\r\n              <div className=\"flex items-center justify-between gap-3\">\r\n                <button className=\"flex items-center gap-2 px-4 py-2 bg-gradient-to-r text-white rounded-lg shadow-md hover:scale-105 active:scale-95 transition border focus-visible:ring-2 from-fuchsia-400/90 border-fuchsia-400/40 focus-visible:ring-fuchsia-400 to-fuchsia-400/80 font-geist\">\r\n                  <svg\r\n                    xmlns=\"http://www.w3.org/2000/svg\"\r\n                    width=\"24\"\r\n                    height=\"24\"\r\n                    viewBox=\"0 0 24 24\"\r\n                    fill=\"none\"\r\n                    stroke=\"currentColor\"\r\n                    strokeWidth=\"2\"\r\n                    strokeLinecap=\"round\"\r\n                    strokeLinejoin=\"round\"\r\n                    className=\"lucide lucide-play-circle w-5 h-5\"\r\n                  >\r\n                    <circle cx=\"12\" cy=\"12\" r=\"10\" />\r\n                    <polygon points=\"10 8 16 12 10 16 10 8\" />\r\n                  </svg>\r\n                  Swap Now\r\n                </button>\r\n                <button className=\"flex items-center gap-2 px-4 py-2 bg-gradient-to-r from-white/10 to-white/5 rounded-lg border active:scale-95 transition focus-visible:ring-2 text-fuchsia-200 border-fuchsia-400/30 hover:bg-violet-900/15 focus-visible:ring-fuchsia-400 font-geist\">\r\n                  <svg\r\n                    xmlns=\"http://www.w3.org/2000/svg\"\r\n                    width=\"24\"\r\n                    height=\"24\"\r\n                    viewBox=\"0 0 24 24\"\r\n                    fill=\"none\"\r\n                    stroke=\"currentColor\"\r\n                    strokeWidth=\"2\"\r\n                    strokeLinecap=\"round\"\r\n                    strokeLinejoin=\"round\"\r\n                    className=\"lucide lucide-bar-chart-3 w-5 h-5\"\r\n                  >\r\n                    <path d=\"M3 3v16a2 2 0 0 0 2 2h16\" />\r\n                    <path d=\"M18 17V9\" />\r\n                    <path d=\"M13 17V5\" />\r\n                    <path d=\"M8 17v-3\" />\r\n                  </svg>\r\n                  Stats\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </section>\r\n        </div>\r\n      </main>\r\n\r\n      <style jsx>{`\r\n        /* Entrance Animations */\r\n        .animate-seq {\r\n          opacity: 0;\r\n          filter: blur(24px);\r\n          transform: translateY(28px) scale(0.98);\r\n          transition: opacity 0.8s cubic-bezier(0.44, 1.2, 0.6, 1.09),\r\n            filter 0.8s cubic-bezier(0.33, 1.3, 0.7, 1.1),\r\n            transform 0.8s cubic-bezier(0.44, 1.2, 0.6, 1.09);\r\n          will-change: opacity, filter, transform;\r\n        }\r\n        .animate-seq.visible {\r\n          opacity: 1;\r\n          filter: blur(0);\r\n          transform: translateY(0) scale(1);\r\n        }\r\n        .animate-delay-100 {\r\n          transition-delay: 0.1s;\r\n        }\r\n        .animate-delay-300 {\r\n          transition-delay: 0.3s;\r\n        }\r\n        .animate-delay-500 {\r\n          transition-delay: 0.5s;\r\n        }\r\n\r\n        /* Responsive tweaks mirroring original media queries */\r\n        @media (max-width: 1024px) {\r\n          .lg\\:flex-row {\r\n            flex-direction: column-reverse !important;\r\n          }\r\n          .lg\\:items-start {\r\n            align-items: center !important;\r\n          }\r\n          .lg\\:text-left {\r\n            text-align: center !important;\r\n          }\r\n          .controller-img {\r\n            width: 260px !important;\r\n          }\r\n        }\r\n        @media (max-width: 500px) {\r\n          .max-w-md {\r\n            max-width: 98vw !important;\r\n          }\r\n          .w-60 {\r\n            width: 140px !important;\r\n          }\r\n          .px-6 {\r\n            padding-left: 1rem !important;\r\n            padding-right: 1rem !important;\r\n          }\r\n          .max-w-xl {\r\n            max-width: 98vw !important;\r\n          }\r\n          .px-4 {\r\n            padding-left: 0.5rem !important;\r\n            padding-right: 0.5rem !important;\r\n          }\r\n          .controller-img {\r\n            width: 180px !important;\r\n          }\r\n        }\r\n\r\n        /* Floating wallet (controller) animation */\r\n        @keyframes controller-float {\r\n          0% {\r\n            transform: translateY(0) rotate(-10deg) scale(1);\r\n          }\r\n          60% {\r\n            transform: translateY(-14px) rotate(-15deg) scale(1.06);\r\n          }\r\n          100% {\r\n            transform: translateY(0) rotate(-10deg) scale(1);\r\n          }\r\n        }\r\n        .controller-animate-group:focus-within .controller-img,\r\n        .controller-animate-group:hover .controller-img {\r\n          animation-play-state: paused !important;\r\n          transform: translateY(-7px) rotate(-17deg) scale(1.1) !important;\r\n          transition: transform 0.3s cubic-bezier(0.4, 2, 0.4, 1);\r\n          filter: brightness(1.12) drop-shadow(0 12px 36px #e879f9cc);\r\n        }\r\n        .controller-img {\r\n          will-change: transform, filter;\r\n          transition: transform 0.3s cubic-bezier(0.4, 2, 0.4, 1),\r\n            filter 0.3s cubic-bezier(0.4, 2, 0.4, 1);\r\n          outline: none;\r\n          cursor: pointer;\r\n          animation: controller-float 2.7s ease-in-out infinite alternate;\r\n        }\r\n\r\n        /* Glass card shadow tweak for violet glow */\r\n        .glass-card-gaming {\r\n          box-shadow: 0 8px 32px 0 rgba(232, 121, 249, 0.23),\r\n            0 2px 8px 0 rgba(168, 85, 247, 0.09) inset;\r\n        }\r\n\r\n        /* Primary & secondary button styles (re‑using original classes but with purple accents) */\r\n        .button {\r\n          position: relative;\r\n          transition: all 0.3s ease-in-out;\r\n          box-shadow: 0px 10px 20px rgba(0, 0, 0, 0.2);\r\n          padding-block: 0.5rem;\r\n          padding-inline: 1.25rem;\r\n          background-color: rgb(139 92 246);\r\n          border-radius: 9999px;\r\n          display: flex;\r\n          align-items: center;\r\n          justify-content: center;\r\n          cursor: pointer;\r\n          color: #ffff;\r\n          gap: 10px;\r\n          font-weight: 600;\r\n          border: 3px solid #a855f7;\r\n          outline: none;\r\n          overflow: hidden;\r\n          font-size: 15px;\r\n        }\r\n        .button .icon {\r\n          width: 24px;\r\n          height: 24px;\r\n          transition: all 0.3s ease-in-out;\r\n        }\r\n        .button:hover {\r\n          transform: scale(1.05);\r\n          border-color: #c084fc;\r\n        }\r\n        .button:hover .icon {\r\n          transform: translate(4px);\r\n        }\r\n        .button:hover::before {\r\n          animation: shine 1.5s ease-out infinite;\r\n        }\r\n        .button::before {\r\n          content: \"\";\r\n          position: absolute;\r\n          width: 100px;\r\n          height: 100%;\r\n          background-image: linear-gradient(\r\n            120deg,\r\n            rgba(255, 255, 255, 0) 30%,\r\n            rgba(255, 255, 255, 0.8),\r\n            rgba(255, 255, 255, 0) 70%\r\n          );\r\n          top: 0;\r\n          left: -100px;\r\n          opacity: 0.6;\r\n        }\r\n        @keyframes shine {\r\n          0% {\r\n            left: -100px;\r\n          }\r\n          60% {\r\n            left: 100%;\r\n          }\r\n          to {\r\n            left: 100%;\r\n          }\r\n        }\r\n        .button-secondary {\r\n          position: relative;\r\n          transition: all 0.2s cubic-bezier(0.4, 2, 0.4, 1);\r\n          box-shadow: none;\r\n          padding-block: 0.5rem;\r\n          padding-inline: 1.1rem;\r\n          background: transparent;\r\n          border-radius: 9999px;\r\n          display: flex;\r\n          align-items: center;\r\n          justify-content: center;\r\n          cursor: pointer;\r\n          color: #d8b4fe;\r\n          gap: 10px;\r\n          font-weight: 600;\r\n          border: 3px solid #a855f7;\r\n          outline: none;\r\n          font-size: 15px;\r\n        }\r\n        .button-secondary .icon {\r\n          width: 22px;\r\n          height: 22px;\r\n          transition: all 0.2s;\r\n          stroke: #a855f7 !important;\r\n        }\r\n        .button-secondary:hover {\r\n          background-color: rgba(232, 121, 249, 0.08);\r\n          color: #d8b4fe;\r\n          border-color: #d8b4fe;\r\n        }\r\n      `}</style>\r\n    </div>\r\n  );\r\n};\r\n\r\n",
      "path": "/components/mvpblocks/mainsections/hero/web3-hero.tsx",
      "target": "components/mvpblocks/web3-hero.tsx"
    }
  ]
}