{
  "name": "skeleton-table-two",
  "author": "midhunkalarikkal",
  "type": "registry:block",
  "dependencies": [],
  "registryDependencies": [
    "https://blocks.mvp-subha.me/r/input.json",
    "https://blocks.mvp-subha.me/r/button.json",
    "https://blocks.mvp-subha.me/r/dropdown-menu.json"
  ],
  "files": [
    {
      "type": "registry:block",
      "content": "import { Input } from '@/components/ui/input';\r\nimport { Button } from '@/components/ui/button';\r\nimport {\r\n  DropdownMenu,\r\n  DropdownMenuTrigger,\r\n} from '@/components/ui/dropdown-menu';\r\nimport {\r\n  ErrorMessage,\r\n  ShimmerTable,\r\n  SkeletonTableProps,\r\n} from './skeleton-table-1';\r\n\r\nconst RealTopBar: React.FC<SkeletonTableProps> = ({\r\n  showFilter,\r\n  showColumnToggle,\r\n}) => (\r\n  <div className=\"flex items-center py-4\">\r\n    {showFilter && <Input placeholder=\"Filter values\" className=\"max-w-sm\" />}\r\n    {showColumnToggle && (\r\n      <DropdownMenu>\r\n        <div className=\"ml-auto\">\r\n          <DropdownMenuTrigger asChild>\r\n            <Button variant=\"outline\">Columns</Button>\r\n          </DropdownMenuTrigger>\r\n        </div>\r\n      </DropdownMenu>\r\n    )}\r\n  </div>\r\n);\r\n\r\nconst TableHeading: React.FC<SkeletonTableProps> = ({\r\n  columnCount,\r\n  showTableHeading,\r\n  tableHeadings,\r\n  columnWidthArray,\r\n}) => {\r\n  if (!columnCount || columnCount === 0)\r\n    return (\r\n      <ErrorMessage\r\n        message={'Please ensure that columnCount is greater than 0'}\r\n      />\r\n    );\r\n\r\n  if (columnWidthArray && columnCount !== columnWidthArray.length) {\r\n    return (\r\n      <ErrorMessage\r\n        message={\r\n          'Please ensure that columnCount and columnWidthArray length is equal'\r\n        }\r\n      />\r\n    );\r\n  }\r\n\r\n  const headings = showTableHeading\r\n    ? tableHeadings?.length === columnCount\r\n      ? tableHeadings\r\n      : Array.from({ length: columnCount }, () => 'â€”')\r\n    : [];\r\n\r\n  return (\r\n    <div\r\n      className={`mb-1 flex h-10 items-center border-b-2 ${showTableHeading ? 'block' : 'hidden'}`}\r\n    >\r\n      {headings.map((heading, idx) => (\r\n        <div\r\n          key={idx}\r\n          className={`flex justify-center ${columnWidthArray ? columnWidthArray[idx] : 'w-full'} ${idx !== headings.length && 'border-l-2'}`}\r\n        >\r\n          <h3 className=\"overflow-hidden truncate whitespace-nowrap text-xs font-semibold md:text-[15px]\">\r\n            {heading}\r\n          </h3>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default function SkeletonTableTwoWrapper({\r\n  rowCount = 5,\r\n  columnCount = 5,\r\n  showTopBar = true,\r\n  showFilter = true,\r\n  showColumnToggle = true,\r\n  bodyClassName = 'px-10',\r\n  tableHeadings = ['Name', 'Email', 'Phone', 'Verified', 'Options'],\r\n  columnWidthArray = ['w-2/12', 'w-4/12', 'w-3/12', 'w-2/12', 'w-1/12'],\r\n}: SkeletonTableProps) {\r\n  return (\r\n    <div className={`w-full ${bodyClassName}`}>\r\n      {showTopBar && (\r\n        <RealTopBar\r\n          showFilter={showFilter}\r\n          showColumnToggle={showColumnToggle}\r\n        />\r\n      )}\r\n\r\n      <ShimmerTable\r\n        rowCount={rowCount}\r\n        columnCount={columnCount}\r\n        columnWidthArray={columnWidthArray}\r\n        renderHeading={\r\n          <TableHeading\r\n            columnCount={columnCount}\r\n            showTableHeading={true}\r\n            tableHeadings={tableHeadings}\r\n            columnWidthArray={columnWidthArray}\r\n          />\r\n        }\r\n      />\r\n    </div>\r\n  );\r\n}\r\n",
      "path": "/components/mvpblocks/shimmers/skeleton-table-2.tsx",
      "target": "components/mvpblocks/skeleton-table-2.tsx"
    }
  ]
}